# Main configuration file for Vision Token Compression

# Experiment settings
experiment:
  name: "vision_token_compression"
  seed: 42
  use_wandb: true
  wandb_project: "vision-token-compression"
  wandb_entity: null  # Set your wandb entity here

# Model settings
model:
  clip:
    model_name: "openai/clip-vit-large-patch14-336"
    freeze: true
    image_size: 336

  compressor:
    output_grid_size: 6  # Compress to 6x6 grid (36 tokens)
    num_layers: 3
    use_residual: true
    use_layer_norm: true

  discriminator:
    num_layers: 3
    mlp_ratio: 4
    dropout: 0.1

  autoencoder:
    num_layers: 3
    use_attention: false  # Use conv decoder by default

# Loss settings
loss:
  wgan:
    lambda_gp: 10.0

  autoencoder:
    loss_type: "hybrid"  # Options: mse, cosine, hybrid
    normalize: true

  weights:
    wgan: 1.0
    ae: 1.0

# Training settings
training:
  epochs: 100
  batch_size: 32
  learning_rate: 1e-4
  discriminator_lr: 1e-4
  n_critic: 5  # Number of discriminator updates per generator update

  # Optimizer settings
  optimizer:
    betas: [0.5, 0.999]
    weight_decay: 0.0

  # Learning rate scheduler
  scheduler:
    use: true
    type: "cosine"  # Options: cosine, step, plateau
    warmup_epochs: 5
    min_lr: 1e-6

# Data settings
data:
  imagenet_root: "/path/to/imagenet"  # Update this path
  num_workers: 4
  pin_memory: true
  use_subset: false  # Set to true for quick testing
  subset_size: 1000

# Hardware settings
hardware:
  cuda_device: 0  # CUDA device number
  mixed_precision: true  # Use automatic mixed precision
  compile: false  # Use torch.compile (requires PyTorch 2.0+)

# Checkpoint settings
checkpoint:
  save_dir: "./checkpoints"
  save_frequency: 5  # Save every N epochs
  keep_last_n: 3  # Keep only last N checkpoints

# Validation settings
validation:
  frequency: 1  # Validate every N epochs
  save_reconstructions: true  # Save reconstruction visualizations

# Logging settings
logging:
  log_frequency: 100  # Log every N steps
  print_frequency: 10  # Print to console every N steps
